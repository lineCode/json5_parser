
int main(int argc, char* argv[])
{
	const char* psz[] =
	{
		"12345678998765432101.23E50",	//??
		"123456789987654321012.3E50",	//??
		"9223372036854775807",	//MAX 64bits int
		"9223372036854775808",
		"1E308",
		"12E308",
		"0.12E-309",
		"1234567899876543E-308",
		"123456789987654321E1",
		"1234567899876543210123E1",
		"1.234567899876543210123E50",
		"12.34567899876543210123E50",
		"123.4567899876543210123E50",
		"1234.567899876543210123E50",
		"12345.67899876543210123E50",
		"123456.7899876543210123E50",
		"1234567.899876543210123E50",
		"12345678.99876543210123E50",
		"123456789.9876543210123E50",
		"1234567899.876543210123E50",
		"12345678998.76543210123E50",
		"123456789987.6543210123E50",
		"1234567899876.543210123E50",
		"12345678998765.43210123E50",
		"123456789987654.3210123E50",
		"1234567899876543.210123E50",
		"12345678998765432.10123E50",
		"123456789987654321.0123E50",
		"1234567899876543210.123E50",
		"12345678998765432101.23E50",	//??
		"123456789987654321012.3E50",	//??
		"-1",
		"-12",
		"-1234567899876543",
		"-123456789987654321",
		"-9223372036854775807",	//MAX 64bits int
		"-9223372036854775808",
		"-1234567899876543210123",
		"-1.234567899876543210123",
		"-12.34567899876543210123",
		"-123.4567899876543210123",
		"-1234.567899876543210123",
		"-12345.67899876543210123",
		"-123456.7899876543210123",
		"-1234567.899876543210123",
		"-12345678.99876543210123",
		"-123456789.9876543210123",
		"-1234567899.876543210123",
		"-12345678998.76543210123",
		"-123456789987.6543210123",
		"-1234567899876.543210123",
		"-12345678998765.43210123",
		"-123456789987654.3210123",
		"-1234567899876543.210123",
		"-12345678998765432.10123",
		"-123456789987654321.0123",
		"-1234567899876543210.123",
		"-12345678998765432101.23",
		"-123456789987654321012.3",
		"+1",
		"+12",
		"+1234567899876543",
		"+123456789987654321",
		"+9223372036854775807",	//MAX 64bits int
		"+9223372036854775808",
		"+1234567899876543210123",
		"+1.234567899876543210123",
		"+12.34567899876543210123",
		"+123.4567899876543210123",
		"+1234.567899876543210123",
		"+12345.67899876543210123",
		"+123456.7899876543210123",
		"+1234567.899876543210123",
		"+12345678.99876543210123",
		"+123456789.9876543210123",
		"+1234567899.876543210123",
		"+12345678998.76543210123",
		"+123456789987.6543210123",
		"+1234567899876.543210123",
		"+12345678998765.43210123",
		"+123456789987654.3210123",
		"+1234567899876543.210123",
		"+12345678998765432.10123",
		"+123456789987654321.0123",
		"+1234567899876543210.123",
		"+12345678998765432101.23",
		"+123456789987654321012.3",
	};

	simd_double_parser::number_value nv;
	simd_double_parser::parser_result isDouble;

	for (const char* s : psz)
	{
		std::tie(nv, isDouble) = simd_double_parser::parser(s, s + strlen(s));
		if (isDouble == simd_double_parser::parser_result::Double)
		{
			printf("'%s' is double, value=%.16lE\r\n", s, nv.d);

			double d2 = std::strtold(s, nullptr);
			wchar_t buff1[64];
			wchar_t buff2[64];
			swprintf_s(buff1, _countof(buff1), L"%.16lE", nv.d);
			swprintf_s(buff2, _countof(buff2), L"%.16lE", d2);
			if (memcmp(buff1, buff2, 17) != 0)
				wprintf(L"Huge difference. 'strtold' is %s.\r\n", buff2);
		}
		else if (isDouble == simd_double_parser::parser_result::Long)
		{
			printf("'%s' is long, value=%Id\r\n", s, nv.l);
		}
		else
		{
			printf("'%s' is invalid\r\n", s);
		}
	}

	return 0;
}
